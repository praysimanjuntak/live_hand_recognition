{"version":3,"sources":["logo.svg","utilities.js","App.js","reportWebVitals.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","color","size","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","App","webcamRef","useRef","canvasRef","runHandpose","a","handpose","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","getContext","className","ref","position","marginLeft","marginRight","left","right","textAlign","zIndex","bottom","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77b0e91a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const fingerJoints = {\r\n    thumb: [0, 1, 2, 3, 4],\r\n    indexFinger: [0, 5, 6, 7, 8],\r\n    middleFinger: [0, 9, 10, 11, 12],\r\n    ringFinger: [0, 13, 14, 15, 16],\r\n    pinky: [0, 17, 18, 19, 20]\r\n};\r\n\r\nconst style = {\r\n    0: { color: \"yellow\", size: 15 },\r\n    1: { color: \"gold\", size: 6 },\r\n    2: { color: \"green\", size: 10 },\r\n    3: { color: \"gold\", size: 6 },\r\n    4: { color: \"gold\", size: 6 },\r\n    5: { color: \"purple\", size: 10 },\r\n    6: { color: \"gold\", size: 6 },\r\n    7: { color: \"gold\", size: 6 },\r\n    8: { color: \"gold\", size: 6 },\r\n    9: { color: \"blue\", size: 10 },\r\n    10: { color: \"gold\", size: 6 },\r\n    11: { color: \"gold\", size: 6 },\r\n    12: { color: \"gold\", size: 6 },\r\n    13: { color: \"red\", size: 10 },\r\n    14: { color: \"gold\", size: 6 },\r\n    15: { color: \"gold\", size: 6 },\r\n    16: { color: \"gold\", size: 6 },\r\n    17: { color: \"orange\", size: 10 },\r\n    18: { color: \"gold\", size: 6 },\r\n    19: { color: \"gold\", size: 6 },\r\n    20: { color: \"gold\", size: 6 },\r\n};\r\n\r\nexport const drawHand = (predictions, ctx) => {\r\n    if (predictions.length > 0) {\r\n        predictions.forEach((prediction) => {\r\n            const landmarks = prediction.landmarks;\r\n\r\n            \r\n            for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n                let finger = Object.keys(fingerJoints)[j];\r\n                for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n                    const firstJointIndex = fingerJoints[finger][k];\r\n                    const secondJointIndex = fingerJoints[finger][k + 1];\r\n\r\n                    ctx.beginPath();\r\n                    ctx.moveTo(\r\n                        landmarks[firstJointIndex][0],\r\n                        landmarks[firstJointIndex][1]\r\n                    );\r\n                    ctx.lineTo(\r\n                        landmarks[secondJointIndex][0],\r\n                        landmarks[secondJointIndex][1]\r\n                    );\r\n                    ctx.strokeStyle = 'gold';\r\n                    ctx.lineWidth = 4;\r\n                    ctx.stroke();\r\n                }\r\n            }\r\n\r\n            for (let i = 0; i < landmarks.length; i++) {\r\n                const x = landmarks[i][0];\r\n                const y = landmarks[i][1];\r\n                ctx.beginPath();\r\n                ctx.arc(x, y, style[i]['size'], 0, 3 * Math.PI);\r\n                ctx.fillStyle = style[i]['color'];\r\n                ctx.fill();\r\n            }\r\n        })\r\n    }\r\n}","import React, { useRef } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport * as tf from '@tensorflow/tfjs';\nimport * as handpose from '@tensorflow-models/handpose';\nimport Webcam from 'react-webcam';\nimport { drawHand } from './utilities';\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log('Handpose model loaded.');\n    // Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 100)\n  };\n\n  const detect = async (net) => {\n    if (\n      typeof webcamRef.current !== 'undefined' &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      const hand = await net.estimateHands(video);\n\n      const ctx = canvasRef.current.getContext('2d');\n      drawHand(hand, ctx);\n    }\n  }\n\n  runHandpose();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam ref={webcamRef}\n        style={{\n          position: 'absolute',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          left: '0',\n          right: '0',\n          textAlign: 'center',\n          zIndex: '9',\n          width: '640',\n          height: '480'\n        }} />\n        <canvas ref={canvasRef}\n        style={{\n          position: 'absolute',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          left: '0',\n          right: '0',\n          textAlign: 'center',\n          zIndex: '9',\n          width: '640',\n          height: '480'\n        }} />\n      </header>\n      <h3 style={{position: 'absolute', bottom: '0', width: '100%', background: 'white'}}>Depending on your device, usually it takes about 20 seconds for the program to run.</h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}